modelar-db {

  # mode of operation: either server or edge
  mode = "edge"

  # Supported: h2, spark
  engine = "h2"
  #engine = "spark"

  # Supported: socket, http, file
  interface = "socket"
  #interface = "http"
  #interface = "test.sql"

  # In the interface print result in a human friendly format
  human = true

  # Supported: Positive Integer
  batch-size = 50000

  # Supported: Positive Integer
  spark-streaming = 1

  # Supported: JDBC, Cassandra
  storage = "jdbc:h2:mem:memdb"
  #storage jdbc:h2:file:./h2db;AUTO_SERVER=TRUE
  #storage postgresql://127.0.0.1/postgres?password=password
  #storage cassandra://localhost

  # Supported: filepath (glob), ip:port
  source = "./data/*.dat"
  #source = "127.0.0.1:9999"

  # TODO: Make this an object instead of a string split by spaces
  # Supported: tid derived_name function(value, scalingFactor) or source_name derived_name function(value, scalingFactor)
  derived-source = []
  #derived-source = ["1 derived_name sin(toRadians(value))"]

  # Supported: none, filepath, schema
  #dimension-spec
  #dimension-spec path/to/dimensions.txt
  #dimension-spec Type, logical string, concrete string; Location, country string, region string

  # Supported: sources, levels, members, distance, file, auto
  # correlation-spec = "auto"
  # correlation-spec = L80R9a_AirTemperature 44 L80R9b_AirTemperature
  # correlation-spec = Measure 1 Temperature
  # correlation-spec = Location 0, Measure 3
  # correlation-spec = 0.25
  # correlation-spec = Location 0, Measure 3 * Measure 1 Temperature 0.5

  # Supported: Positive Float
  dynamic-split-fraction = 10.0

  csv = {
    # Supported: String
    separator = "\\s"

    # Suports: True / False
    #header True
    header = false

    # Supported: Java SimpleDateFormat, unix, or java
    #dateformat yyyy-MM-dd HH:mm:ss.SSS
    dateformat = "unix"
    #dateformat java

    # Supported: An ISO 639 alpha-2 or alpha-3 language code, or a language subtag up to 8 characters in length.
    locale = en
    #locale da

  }

  # Index of timestamp column
  # Supports: Positive Integer
  timestamp-column = 0

  # Index of values column
  # Supports: Positive Integer
  value-column = 1

  # Supported: Java TimeZone
  timezone = "UTC"

  # Supported: PMC_MeanModel, SwingFilterModel, FacebookGorillaModel
  models = [
    dk.aau.modelardb.core.models.PMC_MeanModelType
    dk.aau.modelardb.core.models.SwingFilterModelType
    dk.aau.modelardb.core.models.FacebookGorillaModelType
  ]

  # Supports: 0 -> 100
  error-bound = 10

  # Supports: Positive Integer
  length-bound = 50

  # Supports: Positive Integer
  max-latency = 1

  # Supported: Default Sampling Interval in Milliseconds
  sampling-interval = 1000

  # Number of threads to use for ingestion
  ingestors = 1
}

arrow {
  flight-path = "modelar/${edge-id}"

  server = {
    host = localhost
    port = 6006
  }

  client = {
    # Server the client should connect to
    host = localhost
    port = 6006
    edge-id = "edge-1"
  }
}

mqtt {
  host = localhost                  # Broker host
  port = 7777                       # Broker port
  topic = "topic"                   # MQTT Topic to publish messages to
  client-id = "modelar-mqtt-client" # id of mqtt client
}